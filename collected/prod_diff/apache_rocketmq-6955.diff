diff --git a/proxy/src/main/java/org/apache/rocketmq/proxy/common/ReceiptHandleGroup.java b/proxy/src/main/java/org/apache/rocketmq/proxy/common/ReceiptHandleGroup.java
index f25756395..6fee38d11 100644
--- a/proxy/src/main/java/org/apache/rocketmq/proxy/common/ReceiptHandleGroup.java
+++ b/proxy/src/main/java/org/apache/rocketmq/proxy/common/ReceiptHandleGroup.java
@@ -20,6 +20,7 @@ package org.apache.rocketmq.proxy.common;
 import com.google.common.base.MoreObjects;
 import com.google.common.base.Objects;
 import java.util.Map;
+import java.util.Set;
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.Semaphore;
@@ -77,6 +78,22 @@ public class ReceiptHandleGroup {
                 .append("offset", offset)
                 .toString();
         }
+
+        public String getOriginalHandle() {
+            return originalHandle;
+        }
+
+        public String getBroker() {
+            return broker;
+        }
+
+        public int getQueueId() {
+            return queueId;
+        }
+
+        public long getOffset() {
+            return offset;
+        }
     }
 
     public static class HandleData {
@@ -100,6 +117,10 @@ public class ReceiptHandleGroup {
             this.semaphore.release();
         }
 
+        public MessageReceiptHandle getMessageReceiptHandle() {
+            return messageReceiptHandle;
+        }
+
         @Override
         public boolean equals(Object o) {
             return this == o;
@@ -196,6 +217,21 @@ public class ReceiptHandleGroup {
         return res.get();
     }
 
+    public MessageReceiptHandle removeOne(String msgID) {
+        Map<HandleKey, HandleData> handleMap = this.receiptHandleMap.get(msgID);
+        if (handleMap == null) {
+            return null;
+        }
+        Set<HandleKey> keys = handleMap.keySet();
+        for (HandleKey key : keys) {
+            MessageReceiptHandle res = this.remove(msgID, key.originalHandle);
+            if (res != null) {
+                return res;
+            }
+        }
+        return null;
+    }
+
     public void computeIfPresent(String msgID, String handle,
         Function<MessageReceiptHandle, CompletableFuture<MessageReceiptHandle>> function) {
         Map<HandleKey, HandleData> handleMap = this.receiptHandleMap.get(msgID);
