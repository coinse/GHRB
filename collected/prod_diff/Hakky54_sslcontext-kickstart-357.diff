diff --git a/sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java b/sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java
index 60f9fb1..cbd3396 100644
--- a/sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java
+++ b/sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java
@@ -42,7 +42,9 @@ import java.util.Enumeration;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
+import java.util.Optional;
 import java.util.function.UnaryOperator;
+import java.util.stream.Stream;
 
 import static nl.altindag.ssl.util.internal.ValidationUtils.requireNotEmpty;
 import static nl.altindag.ssl.util.internal.ValidationUtils.requireNotNull;
@@ -205,8 +207,7 @@ public final class KeyStoreUtils {
         OperatingSystem operatingSystem = OperatingSystem.get();
         switch (operatingSystem) {
             case MAC: {
-                KeyStore keychainStore = createKeyStore("KeychainStore", null);
-                keyStores.add(keychainStore);
+                createKeyStoreIfAvailable("KeychainStore", null).ifPresent(keyStores::add);
 
                 List<Certificate> systemTrustedCertificates = MacCertificateUtils.getCertificates();
                 KeyStore systemTrustStore = createTrustStore(systemTrustedCertificates);
@@ -220,16 +221,15 @@ public final class KeyStoreUtils {
                 break;
             }
             case ANDROID: {
-                KeyStore androidCAStore = createKeyStore("AndroidCAStore", null);
-                keyStores.add(androidCAStore);
+                createKeyStoreIfAvailable("AndroidCAStore", null).ifPresent(keyStores::add);
                 break;
             }
             case WINDOWS: {
-                KeyStore windowsRootKeyStore = createKeyStore("Windows-ROOT", null);
-                KeyStore windowsMyKeyStore = createKeyStore("Windows-MY", null);
-
-                keyStores.add(windowsRootKeyStore);
-                keyStores.add(windowsMyKeyStore);
+                Stream.of("Windows-ROOT", "Windows-ROOT-LOCALMACHINE", "Windows-ROOT-CURRENTUSER", "Windows-MY", "Windows-MY-CURRENTUSER", "Windows-MY-LOCALMACHINE")
+                        .map(keystoreType -> createKeyStoreIfAvailable(keystoreType, null))
+                        .filter(Optional::isPresent)
+                        .map(Optional::get)
+                        .forEach(keyStores::add);
                 break;
             }
             default: {
@@ -239,9 +239,33 @@ public final class KeyStoreUtils {
             }
         }
 
+        if (LOGGER.isDebugEnabled()) {
+            int totalTrustedCertificates = keyStores.stream()
+                    .mapToInt(KeyStoreUtils::countAmountOfTrustMaterial)
+                    .sum();
+
+            LOGGER.debug("Loaded [{}] system trusted certificates", totalTrustedCertificates);
+        }
+
         return Collections.unmodifiableList(keyStores);
     }
 
+    @SuppressWarnings("SameParameterValue")
+    static Optional<KeyStore> createKeyStoreIfAvailable(String keyStoreType, char[] keyStorePassword) {
+        try {
+            KeyStore keyStore = createKeyStore(keyStoreType, keyStorePassword);
+
+            if (LOGGER.isDebugEnabled()) {
+                int totalTrustedCertificates = countAmountOfTrustMaterial(keyStore);
+                LOGGER.debug("Successfully loaded KeyStore of the type [{}] having [{}] entries", keyStoreType, totalTrustedCertificates);
+            }
+            return Optional.of(keyStore);
+        } catch (Exception ignored) {
+            LOGGER.debug("Failed to load KeyStore of the type [{}]", keyStoreType);
+            return Optional.empty();
+        }
+    }
+
     public static List<Certificate> getCertificates(KeyStore keyStore) {
         return getAliasToCertificate(keyStore).values().stream()
                 .collect(CollectorsUtils.toUnmodifiableList());
