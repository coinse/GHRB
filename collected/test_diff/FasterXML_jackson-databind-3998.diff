diff --git a/src/test/java/com/fasterxml/jackson/databind/node/NodeFeaturesTest.java b/src/test/java/com/fasterxml/jackson/databind/node/NodeFeaturesTest.java
index 726b6c44b6..679ce906c0 100644
--- a/src/test/java/com/fasterxml/jackson/databind/node/NodeFeaturesTest.java
+++ b/src/test/java/com/fasterxml/jackson/databind/node/NodeFeaturesTest.java
@@ -56,7 +56,7 @@ public class NodeFeaturesTest extends BaseMapTest
 
     /*
     /**********************************************************************
-    /* ObjectNode property handling
+    /* ObjectNode property handling: null-handling
     /**********************************************************************
      */
 
@@ -109,6 +109,31 @@ public class NodeFeaturesTest extends BaseMapTest
         assertEquals(a2q("{'a':1,'c':true}"), w.writeValueAsString(doc));
     }
 
+    /*
+    /**********************************************************************
+    /* ObjectNode property handling: sorting on write
+    /**********************************************************************
+     */
+
+    // [databind#3476]
+    public void testWriteSortedProperties() throws Exception
+    {
+        assertFalse(WRITER.isEnabled(JsonNodeFeature.WRITE_PROPERTIES_SORTED));
+
+        ObjectNode doc = MAPPER.createObjectNode();
+        doc.put("b", 2);
+        doc.put("c", 3);
+        doc.put("a", 1);
+
+        // by default, retain insertion order:
+        assertEquals(a2q("{'b':2,'c':3,'a':1}"), WRITER.writeValueAsString(doc));
+
+        // but if forcing sorting, changes
+        ObjectWriter w2 = WRITER.with(JsonNodeFeature.WRITE_PROPERTIES_SORTED);
+        assertTrue(w2.isEnabled(JsonNodeFeature.WRITE_PROPERTIES_SORTED));
+        assertEquals(a2q("{'a':1,'b':2,'c':3}"), w2.writeValueAsString(doc));
+    }
+
     /*
     /**********************************************************************
     /* Other features
