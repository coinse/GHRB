diff --git a/broker/src/test/java/org/apache/rocketmq/broker/subscription/SubscriptionGroupManagerTest.java b/broker/src/test/java/org/apache/rocketmq/broker/subscription/SubscriptionGroupManagerTest.java
new file mode 100644
index 000000000..6337c69ea
--- /dev/null
+++ b/broker/src/test/java/org/apache/rocketmq/broker/subscription/SubscriptionGroupManagerTest.java
@@ -0,0 +1,77 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.rocketmq.broker.subscription;
+
+import com.google.common.collect.ImmutableMap;
+import java.util.Map;
+import org.apache.rocketmq.broker.BrokerController;
+import org.apache.rocketmq.common.SubscriptionGroupAttributes;
+import org.apache.rocketmq.common.attribute.BooleanAttribute;
+import org.apache.rocketmq.remoting.protocol.subscription.SubscriptionGroupConfig;
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.mockito.Mock;
+import org.mockito.junit.MockitoJUnitRunner;
+
+import static org.assertj.core.api.Assertions.assertThat;
+import static org.assertj.core.api.Assertions.assertThatThrownBy;
+import static org.mockito.Mockito.doNothing;
+import static org.mockito.Mockito.spy;
+import static org.mockito.Mockito.when;
+
+@RunWith(MockitoJUnitRunner.class)
+public class SubscriptionGroupManagerTest {
+    private String group = "group";
+    @Mock
+    private BrokerController brokerControllerMock;
+    private SubscriptionGroupManager subscriptionGroupManager;
+
+    @Before
+    public void before() {
+        SubscriptionGroupAttributes.ALL.put("test", new BooleanAttribute(
+            "test",
+            false,
+            false
+        ));
+        subscriptionGroupManager = spy(new SubscriptionGroupManager(brokerControllerMock));
+        when(brokerControllerMock.getMessageStore()).thenReturn(null);
+        doNothing().when(subscriptionGroupManager).persist();
+    }
+
+    @Test
+    public void updateSubscriptionGroupConfig() {
+        SubscriptionGroupConfig subscriptionGroupConfig = new SubscriptionGroupConfig();
+        subscriptionGroupConfig.setGroupName(group);
+        Map<String, String> attr = ImmutableMap.of("+test", "true");
+        subscriptionGroupConfig.setAttributes(attr);
+        subscriptionGroupManager.updateSubscriptionGroupConfig(subscriptionGroupConfig);
+        SubscriptionGroupConfig result = subscriptionGroupManager.getSubscriptionGroupTable().get(group);
+        assertThat(result).isNotNull();
+        assertThat(result.getGroupName()).isEqualTo(group);
+        assertThat(result.getAttributes().get("test")).isEqualTo("true");
+
+
+        SubscriptionGroupConfig subscriptionGroupConfig1 = new SubscriptionGroupConfig();
+        subscriptionGroupConfig1.setGroupName(group);
+        Map<String, String> attrRemove = ImmutableMap.of("-test", "");
+        subscriptionGroupConfig1.setAttributes(attrRemove);
+        assertThatThrownBy(() -> subscriptionGroupManager.updateSubscriptionGroupConfig(subscriptionGroupConfig1))
+            .isInstanceOf(RuntimeException.class).hasMessage("attempt to update an unchangeable attribute. key: test");
+    }
+}
\ No newline at end of file
diff --git a/broker/src/test/java/org/apache/rocketmq/broker/topic/TopicConfigManagerTest.java b/broker/src/test/java/org/apache/rocketmq/broker/topic/TopicConfigManagerTest.java
index b77c44961..6052a79d4 100644
--- a/broker/src/test/java/org/apache/rocketmq/broker/topic/TopicConfigManagerTest.java
+++ b/broker/src/test/java/org/apache/rocketmq/broker/topic/TopicConfigManagerTest.java
@@ -16,18 +16,22 @@
  */
 package org.apache.rocketmq.broker.topic;
 
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.Optional;
 import org.apache.rocketmq.broker.BrokerController;
-import org.apache.rocketmq.common.attribute.Attribute;
 import org.apache.rocketmq.common.BrokerConfig;
 import org.apache.rocketmq.common.TopicAttributes;
 import org.apache.rocketmq.common.TopicConfig;
+import org.apache.rocketmq.common.attribute.Attribute;
 import org.apache.rocketmq.common.attribute.BooleanAttribute;
+import org.apache.rocketmq.common.attribute.CQType;
 import org.apache.rocketmq.common.attribute.EnumAttribute;
 import org.apache.rocketmq.common.attribute.LongRangeAttribute;
 import org.apache.rocketmq.common.utils.QueueTypeUtils;
 import org.apache.rocketmq.store.DefaultMessageStore;
 import org.apache.rocketmq.store.config.MessageStoreConfig;
-import org.apache.rocketmq.common.attribute.CQType;
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
@@ -35,14 +39,8 @@ import org.junit.runner.RunWith;
 import org.mockito.Mock;
 import org.mockito.junit.MockitoJUnitRunner;
 
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-import java.util.Optional;
-
 import static com.google.common.collect.Sets.newHashSet;
 import static java.util.Arrays.asList;
-import static org.mockito.Mockito.spy;
 import static org.mockito.Mockito.when;
 
 @RunWith(MockitoJUnitRunner.class)
@@ -318,7 +316,6 @@ public class TopicConfigManagerTest {
             supportedAttributes.put(supportAttribute.getName(), supportAttribute);
         }
 
-        topicConfigManager = spy(topicConfigManager);
-        when(topicConfigManager.allAttributes()).thenReturn(supportedAttributes);
+        TopicAttributes.ALL.putAll(supportedAttributes);
     }
 }
