diff --git a/core/src/test/java/com/alibaba/nacos/core/paramcheck/HttpParamExtractorManagerTest.java b/core/src/test/java/com/alibaba/nacos/core/paramcheck/HttpParamExtractorManagerTest.java
index 6c77db89d..2677ef4cb 100644
--- a/core/src/test/java/com/alibaba/nacos/core/paramcheck/HttpParamExtractorManagerTest.java
+++ b/core/src/test/java/com/alibaba/nacos/core/paramcheck/HttpParamExtractorManagerTest.java
@@ -43,6 +43,6 @@ public class HttpParamExtractorManagerTest extends TestCase {
         request.setRequestURI("/nacos/v1/ns/instance");
         request.setMethod(HttpMethod.POST);
         AbstractHttpParamExtractor extractor = paramExtractorManager.getExtractor(request.getRequestURI(), request.getMethod(), "naming");
-        extractor.extractParamAndCheck(request);
+        extractor.extractParam(request);
     }
 }
\ No newline at end of file
diff --git a/core/src/test/java/com/alibaba/nacos/core/paramcheck/RpcParamExtractorManagerTest.java b/core/src/test/java/com/alibaba/nacos/core/paramcheck/RpcParamExtractorManagerTest.java
index 1d5445fbf..ff4db1472 100644
--- a/core/src/test/java/com/alibaba/nacos/core/paramcheck/RpcParamExtractorManagerTest.java
+++ b/core/src/test/java/com/alibaba/nacos/core/paramcheck/RpcParamExtractorManagerTest.java
@@ -40,6 +40,6 @@ public class RpcParamExtractorManagerTest extends TestCase {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         ConfigQueryRequest request = new ConfigQueryRequest();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(request.getClass().getSimpleName());
-        extractor.extractParamAndCheck(request);
+        extractor.extractParam(request);
     }
 }
\ No newline at end of file
diff --git a/core/src/test/java/com/alibaba/nacos/core/paramcheck/ServerParamCheckConfigTest.java b/core/src/test/java/com/alibaba/nacos/core/paramcheck/ServerParamCheckConfigTest.java
new file mode 100644
index 000000000..2a99dd57c
--- /dev/null
+++ b/core/src/test/java/com/alibaba/nacos/core/paramcheck/ServerParamCheckConfigTest.java
@@ -0,0 +1,58 @@
+/*
+ * Copyright 1999-2023 Alibaba Group Holding Ltd.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.alibaba.nacos.core.paramcheck;
+
+import com.alibaba.nacos.sys.env.EnvUtil;
+import org.junit.Test;
+import org.springframework.mock.env.MockEnvironment;
+
+import java.lang.reflect.Constructor;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+
+public class ServerParamCheckConfigTest {
+    
+    @Test
+    public void getConfigFromEnv() throws ReflectiveOperationException {
+        MockEnvironment environment = new MockEnvironment();
+        EnvUtil.setEnvironment(environment);
+        environment.setProperty("nacos.core.param.check.enabled", String.valueOf(false));
+        environment.setProperty("nacos.core.param.check.checker", "default");
+        
+        Constructor<ServerParamCheckConfig> declaredConstructor = ServerParamCheckConfig.class.getDeclaredConstructor();
+        declaredConstructor.setAccessible(true);
+        ServerParamCheckConfig paramCheckConfig = declaredConstructor.newInstance();
+        
+        assertFalse(paramCheckConfig.isParamCheckEnabled());
+        assertEquals(paramCheckConfig.getActiveParamChecker(), "default");
+    }
+    
+    @Test
+    public void setParamCheckEnabled() {
+        ServerParamCheckConfig paramCheckConfig = ServerParamCheckConfig.getInstance();
+        paramCheckConfig.setParamCheckEnabled(false);
+        assertFalse(paramCheckConfig.isParamCheckEnabled());
+    }
+    
+    @Test
+    public void setActiveParamChecker() {
+        ServerParamCheckConfig paramCheckConfig = ServerParamCheckConfig.getInstance();
+        paramCheckConfig.setActiveParamChecker("test");
+        assertEquals(paramCheckConfig.getActiveParamChecker(), "test");
+    }
+}
\ No newline at end of file
diff --git a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/BatchInstanceRequestParamExtractorTest.java b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/BatchInstanceRequestParamExtractorTest.java
index 8727ccfe3..604fa5da0 100644
--- a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/BatchInstanceRequestParamExtractorTest.java
+++ b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/BatchInstanceRequestParamExtractorTest.java
@@ -41,6 +41,6 @@ public class BatchInstanceRequestParamExtractorTest {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(req.getClass().getSimpleName());
         assertEquals(extractor.getClass().getSimpleName(), BatchInstanceRequestParamExtractor.class.getSimpleName());
-        extractor.extractParamAndCheck(req);
+        extractor.extractParam(req);
     }
 }
\ No newline at end of file
diff --git a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ConfigBatchListenRequestParamExtractorTest.java b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ConfigBatchListenRequestParamExtractorTest.java
index 7a3cb9ab4..07e70e960 100644
--- a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ConfigBatchListenRequestParamExtractorTest.java
+++ b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ConfigBatchListenRequestParamExtractorTest.java
@@ -41,6 +41,6 @@ public class ConfigBatchListenRequestParamExtractorTest {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(req.getClass().getSimpleName());
         assertEquals(extractor.getClass().getSimpleName(), ConfigBatchListenRequestParamExtractor.class.getSimpleName());
-        extractor.extractParamAndCheck(req);
+        extractor.extractParam(req);
     }
 }
\ No newline at end of file
diff --git a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ConfigRequestParamExtractorTest.java b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ConfigRequestParamExtractorTest.java
index eae348c8f..1d8ae0ede 100644
--- a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ConfigRequestParamExtractorTest.java
+++ b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ConfigRequestParamExtractorTest.java
@@ -54,18 +54,18 @@ public class ConfigRequestParamExtractorTest {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor1 = paramExtractorManager.getExtractor(req1.getClass().getSimpleName());
         assertEquals(extractor1.getClass().getSimpleName(), ConfigRequestParamExtractor.class.getSimpleName());
-        extractor1.extractParamAndCheck(req1);
+        extractor1.extractParam(req1);
         
         AbstractRpcParamExtractor extractor2 = paramExtractorManager.getExtractor(req2.getClass().getSimpleName());
         assertEquals(extractor2.getClass().getSimpleName(), ConfigRequestParamExtractor.class.getSimpleName());
-        extractor2.extractParamAndCheck(req2);
+        extractor2.extractParam(req2);
         
         AbstractRpcParamExtractor extractor3 = paramExtractorManager.getExtractor(req3.getClass().getSimpleName());
         assertEquals(extractor3.getClass().getSimpleName(), ConfigRequestParamExtractor.class.getSimpleName());
-        extractor3.extractParamAndCheck(req3);
+        extractor3.extractParam(req3);
         
         AbstractRpcParamExtractor extractor4 = paramExtractorManager.getExtractor(req4.getClass().getSimpleName());
         assertEquals(extractor4.getClass().getSimpleName(), ConfigRequestParamExtractor.class.getSimpleName());
-        extractor4.extractParamAndCheck(req4);
+        extractor4.extractParam(req4);
     }
 }
\ No newline at end of file
diff --git a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/InstanceRequestParamExtractorTest.java b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/InstanceRequestParamExtractorTest.java
index 97d4ac280..bd5f46892 100644
--- a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/InstanceRequestParamExtractorTest.java
+++ b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/InstanceRequestParamExtractorTest.java
@@ -41,6 +41,6 @@ public class InstanceRequestParamExtractorTest {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(req.getClass().getSimpleName());
         assertEquals(extractor.getClass().getSimpleName(), InstanceRequestParamExtractor.class.getSimpleName());
-        extractor.extractParamAndCheck(req);
+        extractor.extractParam(req);
     }
 }
\ No newline at end of file
diff --git a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ServiceListRequestParamExtractorTest.java b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ServiceListRequestParamExtractorTest.java
index bc8a9d4b5..bee21ad44 100644
--- a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ServiceListRequestParamExtractorTest.java
+++ b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ServiceListRequestParamExtractorTest.java
@@ -41,6 +41,6 @@ public class ServiceListRequestParamExtractorTest {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(req.getClass().getSimpleName());
         assertEquals(extractor.getClass().getSimpleName(), ServiceListRequestParamExtractor.class.getSimpleName());
-        extractor.extractParamAndCheck(req);
+        extractor.extractParam(req);
     }
 }
\ No newline at end of file
diff --git a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ServiceQueryRequestParamExtractorTest.java b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ServiceQueryRequestParamExtractorTest.java
index 93ca14bdc..8fea98415 100644
--- a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ServiceQueryRequestParamExtractorTest.java
+++ b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/ServiceQueryRequestParamExtractorTest.java
@@ -41,6 +41,6 @@ public class ServiceQueryRequestParamExtractorTest {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(req.getClass().getSimpleName());
         assertEquals(extractor.getClass().getSimpleName(), ServiceQueryRequestParamExtractor.class.getSimpleName());
-        extractor.extractParamAndCheck(req);
+        extractor.extractParam(req);
     }
 }
\ No newline at end of file
diff --git a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/SubscribeServiceRequestParamExtractorTest.java b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/SubscribeServiceRequestParamExtractorTest.java
index 22d08495e..2a7cb347a 100644
--- a/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/SubscribeServiceRequestParamExtractorTest.java
+++ b/core/src/test/java/com/alibaba/nacos/core/paramcheck/impl/SubscribeServiceRequestParamExtractorTest.java
@@ -41,7 +41,7 @@ public class SubscribeServiceRequestParamExtractorTest {
         RpcParamExtractorManager paramExtractorManager = RpcParamExtractorManager.getInstance();
         AbstractRpcParamExtractor extractor = paramExtractorManager.getExtractor(req.getClass().getSimpleName());
         assertEquals(extractor.getClass().getSimpleName(), SubscribeServiceRequestParamExtractor.class.getSimpleName());
-        extractor.extractParamAndCheck(req);
+        extractor.extractParam(req);
     }
     
 }
\ No newline at end of file
