diff --git a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionCatchParameterNameTest.java b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionCatchParameterNameTest.java
index 5908fc5111..4dafea4bfb 100644
--- a/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionCatchParameterNameTest.java
+++ b/src/it/java/org/checkstyle/suppressionxpathfilter/XpathRegressionCatchParameterNameTest.java
@@ -40,7 +40,7 @@ public class XpathRegressionCatchParameterNameTest extends AbstractXpathTestSupp
 
     @Test
     public void testSimple() throws Exception {
-        final String pattern = "^(e|t|ex|[a-z][a-z][a-zA-Z]+)$";
+        final String pattern = "^(e|t|ex|[a-z][a-z][a-zA-Z]+|_)$";
 
         final DefaultConfiguration moduleConfig =
                 createModuleConfig(CatchParameterNameCheck.class);
@@ -65,7 +65,7 @@ public class XpathRegressionCatchParameterNameTest extends AbstractXpathTestSupp
 
     @Test
     public void testNested() throws Exception {
-        final String pattern = "^(e|t|ex|[a-z][a-z][a-zA-Z]+)$";
+        final String pattern = "^(e|t|ex|[a-z][a-z][a-zA-Z]+|_)$";
 
         final DefaultConfiguration moduleConfig =
                 createModuleConfig(CatchParameterNameCheck.class);
diff --git a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheck.java b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheck.java
index 3ad5a867f6..4db0862abe 100644
--- a/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheck.java
+++ b/src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheck.java
@@ -35,6 +35,7 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;
  * <li>allows {@code e} abbreviation (suitable for exceptions end errors)</li>
  * <li>allows {@code ex} abbreviation (suitable for exceptions)</li>
  * <li>allows {@code t} abbreviation (suitable for throwables)</li>
+ * <li>allows {@code _} for unnamed catch parameters</li>
  * <li>prohibits numbered abbreviations like {@code e1} or {@code t2}</li>
  * <li>prohibits one letter prefixes like {@code pException}</li>
  * <li>prohibits two letter abbreviations like {@code ie} or {@code ee}</li>
@@ -44,7 +45,7 @@ import com.puppycrawl.tools.checkstyle.api.TokenTypes;
  * <li>
  * Property {@code format} - Sets the pattern to match valid identifiers.
  * Type is {@code java.util.regex.Pattern}.
- * Default value is {@code "^(e|t|ex|[a-z][a-z][a-zA-Z]+)$"}.
+ * Default value is {@code "^(e|t|ex|[a-z][a-z][a-zA-Z]+|_)$"}.
  * </li>
  * </ul>
  * <p>
@@ -67,7 +68,7 @@ public class CatchParameterNameCheck extends AbstractNameCheck {
      * Creates a new {@code CatchParameterNameCheck} instance.
      */
     public CatchParameterNameCheck() {
-        super("^(e|t|ex|[a-z][a-z][a-zA-Z]+)$");
+        super("^(e|t|ex|[a-z][a-z][a-zA-Z]+|_)$");
     }
 
     @Override
diff --git a/src/xdocs-examples/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheckExamplesTest.java b/src/xdocs-examples/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheckExamplesTest.java
index 66e431f3c6..53df98449e 100644
--- a/src/xdocs-examples/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheckExamplesTest.java
+++ b/src/xdocs-examples/java/com/puppycrawl/tools/checkstyle/checks/naming/CatchParameterNameCheckExamplesTest.java
@@ -27,7 +27,7 @@ import com.puppycrawl.tools.checkstyle.AbstractExamplesModuleTestSupport;
 
 public class CatchParameterNameCheckExamplesTest extends AbstractExamplesModuleTestSupport {
 
-    private static final String CATCH_PARAM_NAME_PATTERN_1 = "^(e|t|ex|[a-z][a-z][a-zA-Z]+)$";
+    private static final String CATCH_PARAM_NAME_PATTERN_1 = "^(e|t|ex|[a-z][a-z][a-zA-Z]+|_)$";
     private static final String CATCH_PARAM_NAME_PATTERN_2 = "^[a-z][a-zA-Z0-9]+$";
 
     @Override
