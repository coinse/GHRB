diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheckTest.java
index ea72c62e6..39046386b 100644
--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheckTest.java
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanExpressionCheckTest.java
@@ -42,6 +42,14 @@ public class SimplifyBooleanExpressionCheckTest
             "44:36: " + getCheckMessage(MSG_KEY),
             "45:16: " + getCheckMessage(MSG_KEY),
             "45:32: " + getCheckMessage(MSG_KEY),
+            "95:27: " + getCheckMessage(MSG_KEY),
+            "96:24: " + getCheckMessage(MSG_KEY),
+            "98:27: " + getCheckMessage(MSG_KEY),
+            "104:23: " + getCheckMessage(MSG_KEY),
+            "106:17: " + getCheckMessage(MSG_KEY),
+            "109:21: " + getCheckMessage(MSG_KEY),
+            "110:23: " + getCheckMessage(MSG_KEY),
+            "111:20: " + getCheckMessage(MSG_KEY),
         };
         verifyWithInlineConfigParser(
                 getPath("InputSimplifyBooleanExpression.java"), expected);
diff --git a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/simplifybooleanexpression/InputSimplifyBooleanExpression.java b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/simplifybooleanexpression/InputSimplifyBooleanExpression.java
index ef762da62..a1866160c 100644
--- a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/simplifybooleanexpression/InputSimplifyBooleanExpression.java
+++ b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/simplifybooleanexpression/InputSimplifyBooleanExpression.java
@@ -87,4 +87,27 @@ public class InputSimplifyBooleanExpression
 
         return true;
     }
+
+    void testTernaryExpressions() {
+        boolean a = false;
+        boolean b = true;
+        int c = 13;
+        boolean m = c > 1 ? true : false; // violation
+        boolean e = (a == true) // violation
+                ? c > 1 : false; // ok
+        boolean h = false ? c > 13 : c < 21; // violation
+        boolean f = a == b ? false : c > 1; // ok
+        boolean q = c > 1 ? (c < 15
+                ? false : b) // ok
+                : a != b;
+        boolean v = c > 0 ? true :
+                c < 0 ? false : true; // violation
+        boolean g = (c > 0 ? true : c < 0)
+                ? false : false; // violation
+        Boolean value = null;
+        boolean temp = value != null ? value : false; // ok
+        temp = true ? a() : b(); // violation
+        int d = false ? 1 : 2; // violation
+        temp = a() ? true : true; // violation
+    }
 }
