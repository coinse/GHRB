diff --git a/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheckTest.java b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheckTest.java
index 3c5a64e..f00d986 100644
--- a/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheckTest.java
+++ b/src/test/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheckTest.java
@@ -179,6 +179,16 @@ public class EqualsAvoidNullCheckTest extends AbstractModuleTestSupport {
     }
 
     @Test
+    public void testEqualsSuperClass() throws Exception {
+
+        final String[] expected = {
+            "23:35: " + getCheckMessage(MSG_EQUALS_AVOID_NULL),
+        };
+        verifyWithInlineConfigParser(
+                getPath("InputEqualsAvoidNullSuperClass.java"), expected);
+    }
+
+    @Test
     public void testInputEqualsAvoidNullEnhancedInstanceof() throws Exception {
 
         final String[] expected = {
diff --git a/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/equalsavoidnull/InputEqualsAvoidNullSuperClass.java b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/equalsavoidnull/InputEqualsAvoidNullSuperClass.java
new file mode 100644
index 000000000..6ccd15481
--- /dev/null
+++ b/src/test/resources/com/puppycrawl/tools/checkstyle/checks/coding/equalsavoidnull/InputEqualsAvoidNullSuperClass.java
@@ -0,0 +1,26 @@
+/*
+EqualsAvoidNull
+ignoreEqualsIgnoreCase = (default)false
+
+
+*/
+
+package com.puppycrawl.tools.checkstyle.checks.coding.equalsavoidnull;
+
+public abstract class InputEqualsAvoidNullSuperClass {
+   protected String stringFromBaseClass = "ABC";
+}
+
+class DerivedClass extends InputEqualsAvoidNullSuperClass {
+   protected String classField = "DEF";
+
+    void m1() {
+        if (this.stringFromBaseClass.equals("JKHKJ")) { // ok
+        }
+    }
+
+    void m2() {
+        if (this.classField.equals("JKHKJ")) { // violation
+        }
+    }
+}
