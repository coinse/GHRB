diff --git a/common/src/test/java/com/alibaba/nacos/common/remote/client/RpcClientTest.java b/common/src/test/java/com/alibaba/nacos/common/remote/client/RpcClientTest.java
index b3d6da077..796e2c6d0 100644
--- a/common/src/test/java/com/alibaba/nacos/common/remote/client/RpcClientTest.java
+++ b/common/src/test/java/com/alibaba/nacos/common/remote/client/RpcClientTest.java
@@ -319,17 +319,14 @@ public class RpcClientTest {
                 ((RpcClient.ServerInfo) resolveServerInfoMethod.invoke(rpcClient, "10.10.10.10::8848")).getAddress());
         assertEquals("10.10.10.10:8848",
                 ((RpcClient.ServerInfo) resolveServerInfoMethod.invoke(rpcClient, "10.10.10.10:8848")).getAddress());
-        assertEquals("10.10.10.10:8848",
-                ((RpcClient.ServerInfo) resolveServerInfoMethod.invoke(rpcClient, "http://10.10.10.10:8848"))
-                        .getAddress());
-        assertEquals("10.10.10.10:8848",
-                ((RpcClient.ServerInfo) resolveServerInfoMethod.invoke(rpcClient, "http://10.10.10.10::8848"))
-                        .getAddress());
+        assertEquals("10.10.10.10:8848", ((RpcClient.ServerInfo) resolveServerInfoMethod.invoke(rpcClient,
+                "http://10.10.10.10:8848")).getAddress());
+        assertEquals("10.10.10.10:8848", ((RpcClient.ServerInfo) resolveServerInfoMethod.invoke(rpcClient,
+                "http://10.10.10.10::8848")).getAddress());
         assertEquals("10.10.10.10:8848",
                 ((RpcClient.ServerInfo) resolveServerInfoMethod.invoke(rpcClient, "http://10.10.10.10")).getAddress());
-        assertEquals("10.10.10.10:8848",
-                ((RpcClient.ServerInfo) resolveServerInfoMethod.invoke(rpcClient, "https://10.10.10.10::8848"))
-                        .getAddress());
+        assertEquals("10.10.10.10:8848", ((RpcClient.ServerInfo) resolveServerInfoMethod.invoke(rpcClient,
+                "https://10.10.10.10::8848")).getAddress());
     }
     
     @Test
@@ -437,7 +434,7 @@ public class RpcClientTest {
             exception = e;
         }
         
-        verify(connection, times(3)).requestFuture(any());
+        verify(connection, times(4)).requestFuture(any());
         verify(rpcClient).switchServerAsyncOnRequestFail();
         Assert.assertNotNull(exception);
         assertEquals(RpcClientStatus.UNHEALTHY, rpcClient.rpcClientStatus.get());
