diff --git a/modules/openapi-generator/src/test/java/org/openapitools/codegen/python/PythonClientCodegenTest.java b/modules/openapi-generator/src/test/java/org/openapitools/codegen/python/PythonClientCodegenTest.java
index 8444ffc79607..9d25af8b24a7 100644
--- a/modules/openapi-generator/src/test/java/org/openapitools/codegen/python/PythonClientCodegenTest.java
+++ b/modules/openapi-generator/src/test/java/org/openapitools/codegen/python/PythonClientCodegenTest.java
@@ -567,4 +567,48 @@ public class PythonClientCodegenTest {
         assertNotNull(setupFile);
         assertFileContains(setupFile.toPath(), "setup(");
     }
+
+    @Test(description = "outputs __init__.py with imports for exports")
+    public void testInitFileImportsExports() throws IOException {
+        File output = Files.createTempDirectory("test").toFile().getCanonicalFile();
+        output.deleteOnExit();
+        final OpenAPI openAPI = TestUtils.parseFlattenSpec("src/test/resources/3_0/petstore.yaml");
+        final DefaultGenerator defaultGenerator = new DefaultGenerator();
+        final ClientOptInput clientOptInput = new ClientOptInput();
+        clientOptInput.openAPI(openAPI);
+        PythonClientCodegen pythonClientCodegen = new PythonClientCodegen();
+        pythonClientCodegen.setOutputDir(output.getAbsolutePath());
+        clientOptInput.config(pythonClientCodegen);
+        defaultGenerator.opts(clientOptInput);
+
+        Map<String, File> files = defaultGenerator.generate().stream().collect(Collectors.toMap(File::getPath, Function.identity()));
+
+        File initFile = files.get(Paths.get(output.getAbsolutePath(), "openapi_client", "__init__.py").toString());
+        assertNotNull(initFile);
+        Path initFilePath = initFile.toPath();
+
+        // import apis into sdk package
+        assertFileContains(initFilePath, "from openapi_client.api.pet_api import PetApi as PetApi");
+        assertFileContains(initFilePath, "from openapi_client.api.store_api import StoreApi as StoreApi");
+        assertFileContains(initFilePath, "from openapi_client.api.user_api import UserApi as UserApi");
+
+        // import ApiClient
+        assertFileContains(initFilePath, "from openapi_client.api_response import ApiResponse as ApiResponse");
+        assertFileContains(initFilePath, "from openapi_client.api_client import ApiClient as ApiClient");
+        assertFileContains(initFilePath, "from openapi_client.configuration import Configuration as Configuration");
+        assertFileContains(initFilePath, "from openapi_client.exceptions import OpenApiException as OpenApiException");
+        assertFileContains(initFilePath, "from openapi_client.exceptions import ApiTypeError as ApiTypeError");
+        assertFileContains(initFilePath, "from openapi_client.exceptions import ApiValueError as ApiValueError");
+        assertFileContains(initFilePath, "from openapi_client.exceptions import ApiKeyError as ApiKeyError");
+        assertFileContains(initFilePath, "from openapi_client.exceptions import ApiAttributeError as ApiAttributeError");
+        assertFileContains(initFilePath, "from openapi_client.exceptions import ApiException as ApiException");
+
+        // import models into sdk package
+        assertFileContains(initFilePath, "from openapi_client.models.api_response import ApiResponse as ApiResponse");
+        assertFileContains(initFilePath, "from openapi_client.models.category import Category as Category");
+        assertFileContains(initFilePath, "from openapi_client.models.order import Order as Order");
+        assertFileContains(initFilePath, "from openapi_client.models.pet import Pet as Pet");
+        assertFileContains(initFilePath, "from openapi_client.models.tag import Tag as Tag");
+        assertFileContains(initFilePath, "from openapi_client.models.user import User as User");
+    }
 }
diff --git a/modules/openapi-generator/src/test/java/org/openapitools/codegen/python/PythonPydanticV1ClientCodegenTest.java b/modules/openapi-generator/src/test/java/org/openapitools/codegen/python/PythonPydanticV1ClientCodegenTest.java
index fe22b8cc929f..1c2fd629ce3b 100644
--- a/modules/openapi-generator/src/test/java/org/openapitools/codegen/python/PythonPydanticV1ClientCodegenTest.java
+++ b/modules/openapi-generator/src/test/java/org/openapitools/codegen/python/PythonPydanticV1ClientCodegenTest.java
@@ -503,4 +503,35 @@ public class PythonPydanticV1ClientCodegenTest {
         CodegenProperty property = vars.get(0);
         Assert.assertEquals(property.name, "dollar_value");
     }
+
+    @Test(description = "outputs __init__.py with imports for exports")
+    public void testInitFileImportsExports() throws Exception {
+        final PythonPydanticV1ClientCodegen codegen = new PythonPydanticV1ClientCodegen();
+        final String outputPath = generateFiles(codegen, "src/test/resources/3_0/petstore.yaml");
+        final Path initFilePath = Paths.get(outputPath + "openapi_client/__init__.py");
+
+        // import apis into sdk package
+        assertFileContains(initFilePath, "from openapi_client.api.pet_api import PetApi as PetApi");
+        assertFileContains(initFilePath, "from openapi_client.api.store_api import StoreApi as StoreApi");
+        assertFileContains(initFilePath, "from openapi_client.api.user_api import UserApi as UserApi");
+
+        // import ApiClient
+        assertFileContains(initFilePath, "from openapi_client.api_response import ApiResponse as ApiResponse");
+        assertFileContains(initFilePath, "from openapi_client.api_client import ApiClient as ApiClient");
+        assertFileContains(initFilePath, "from openapi_client.configuration import Configuration as Configuration");
+        assertFileContains(initFilePath, "from openapi_client.exceptions import OpenApiException as OpenApiException");
+        assertFileContains(initFilePath, "from openapi_client.exceptions import ApiTypeError as ApiTypeError");
+        assertFileContains(initFilePath, "from openapi_client.exceptions import ApiValueError as ApiValueError");
+        assertFileContains(initFilePath, "from openapi_client.exceptions import ApiKeyError as ApiKeyError");
+        assertFileContains(initFilePath, "from openapi_client.exceptions import ApiAttributeError as ApiAttributeError");
+        assertFileContains(initFilePath, "from openapi_client.exceptions import ApiException as ApiException");
+
+        // import models into sdk package
+        assertFileContains(initFilePath, "from openapi_client.models.api_response import ApiResponse as ApiResponse");
+        assertFileContains(initFilePath, "from openapi_client.models.category import Category as Category");
+        assertFileContains(initFilePath, "from openapi_client.models.order import Order as Order");
+        assertFileContains(initFilePath, "from openapi_client.models.pet import Pet as Pet");
+        assertFileContains(initFilePath, "from openapi_client.models.tag import Tag as Tag");
+        assertFileContains(initFilePath, "from openapi_client.models.user import User as User");
+    }
 }
