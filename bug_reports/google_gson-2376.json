{
  "issue_id": 1219,
  "issue_url": "https://github.com/google/gson/issues/1219",
  "title": "Don't silently ignore missing type information from `TypeTokens`.",
  "description_text": "I'm active on Stack Overflow, and often see questions with code more or less like this:\r\n\r\n```\r\npublic class Main {\r\n\t\t\r\n\tpublic static void main(String[] args) {\r\n            // should work right?\r\n\t    MyClass mc = new Gson().fromJson(\"{}\", Main.<MyClass>typeTokenHelper());\r\n\t}\r\n\t\r\n\tstatic class MyClass {}\r\n\t\r\n\tpublic static <T> Type typeTokenHelper() {\r\n\t\treturn new TypeToken<T>() {}.getType();\r\n\t}\r\n\r\n}\r\n```\r\n\r\nOf course this fails with:\r\n\r\n```\r\njava.lang.ClassCastException: com.google.gson.internal.LinkedTreeMap cannot be cast to test.Main$MyClass\r\n```\r\n\r\nSince there is not actually any type information available from the `TypeToken`. The `Type` that you get is the generic type `T`:\r\n\r\n```\r\nType t = Main.<MyClass>typeTokenHelper();\r\nSystem.out.println(t); // prints 'T'. instead of the na\u00efvely expected 'MyClass'\r\n```\r\n\r\nThis is confusing. The missing type information should not be silently ignored only to get a `ClassCastException` later. The missing type information is caused by a design time error and should be flagged as early as possible.\r\n\r\nAt first glance a check like this:\r\n\r\n```\r\n// where 'typeOfT' is the type returned by TypeToken::getType\r\nif(typeOfT instanceof TypeVariable) {  // java.lang.reflect.TypeVariable\r\n    throw new RuntimeExcepiton(...);\r\n}\r\n```\r\n\r\nSomewhere might fix this issue. Perhaps in [`TypeToken::getSuperclassTypeParameter`](https://github.com/google/gson/blob/0636635cbffa08157bdbd558b1212e4d806474eb/gson/src/main/java/com/google/gson/reflect/TypeToken.java#L81) or in [`Gson::fromJson`](https://github.com/google/gson/blob/0636635cbffa08157bdbd558b1212e4d806474eb/gson/src/main/java/com/google/gson/Gson.java#L878). (I don't know where the use of TypeTokens with TypeVariables might be required though)"
}