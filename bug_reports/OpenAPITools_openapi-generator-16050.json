{
  "issue_id": 15476,
  "issue_url": "https://github.com/OpenAPITools/openapi-generator/issues/15476",
  "title": "[BUG][python-nextgen] Cannot handle query parameters with non-ref enums",
  "description_text": "#### Bug Report Checklist\r\n\r\n- [x] Have you provided a full/minimal spec to reproduce the issue?\r\n- [x] Have you validated the input using an OpenAPI validator ([example](https://apidevtools.org/swagger-parser/online/))?\r\n- [x] Have you [tested with the latest master](https://github.com/OpenAPITools/openapi-generator/wiki/FAQ#how-to-test-with-the-latest-master-of-openapi-generator) to confirm the issue still exists?\r\n- [x] Have you searched for related issues/PRs?\r\n- [x] What's the actual output vs expected output?\r\n- [ ] [Optional] Sponsorship to speed up the bug fix or feature request ([example](https://github.com/OpenAPITools/openapi-generator/issues/6178))\r\n\r\n<!--\r\nPlease follow the issue template below for bug reports.\r\nAlso please indicate in the issue title which language/library is concerned. Eg:  [BUG][JAVA] Bug generating foo with bar \r\n-->\r\n\r\n##### Description\r\n\r\nhttps://github.com/OpenAPITools/openapi-generator/pull/15278 does not seem to work correctly.\r\n\r\nThe below schema creates the function signature, one of them an enum, the other a string:\r\n\r\n```py\r\nquery_param_with_named_enum : QueryParamEnum, query_param_without_named_enum : StrictStr\r\n```\r\n\r\nBut still tries to access both values with `.value`:\r\n\r\n```py\r\n        # process the query parameters\r\n        _query_params = []\r\n        if _params.get('query_param_with_named_enum') is not None:  # noqa: E501\r\n            _query_params.append(('queryParamWithNamedEnum', _params['query_param_with_named_enum'].value))\r\n\r\n        if _params.get('query_param_without_named_enum') is not None:  # noqa: E501\r\n            _query_params.append(('queryParamWithoutNamedEnum', _params['query_param_without_named_enum'].value))\r\n```\r\n\r\n##### openapi-generator version\r\n\r\n6.6.0\r\n\r\n##### OpenAPI declaration file content or url\r\n\r\n```yaml\r\nopenapi: 3.0.1\r\ninfo:\r\n  title: \"\"\r\n  version: \"\"\r\npaths:\r\n  /test/endpoint:\r\n    get:\r\n      parameters:\r\n        - name: queryParamWithNamedEnum\r\n          in: query\r\n          required: true\r\n          schema:\r\n            $ref: '#/components/schemas/QueryParamEnum'\r\n        - name: queryParamWithoutNamedEnum\r\n          in: query\r\n          required: true\r\n          schema:\r\n            type: string\r\n            enum:\r\n              - ValueA\r\n              - ValueB\r\n      responses:\r\n        200:\r\n          description: OK\r\ncomponents:\r\n  schemas:\r\n    QueryParamEnum:\r\n      type: string\r\n      enum:\r\n        - ValueC\r\n        - ValueD\r\n```\r\n\r\n##### Related issues/PRs\r\n\r\nhttps://github.com/OpenAPITools/openapi-generator/pull/15133\r\nhttps://github.com/OpenAPITools/openapi-generator/pull/15278\r\n\r\n##### Suggest a fix\r\n\r\nShort-term: Do not use `.value` on raw string.\r\n\r\nLong-term: Restrict the allowed values for non-ref enums somehow, maybe with a custom model or the [literal type](https://docs.pydantic.dev/latest/usage/types/#literal-type). This might be breaking for some users.\r\n"
}