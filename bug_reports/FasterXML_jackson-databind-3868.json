{
  "issue_id": 3838,
  "issue_url": "https://github.com/FasterXML/jackson-databind/issues/3838",
  "title": "Difference in the handling of `ObjectId-property` in `JsonIdentityInfo` depending on the deserialization route",
  "description_text": "**Describe the bug**\r\nThis is the problem reported in https://github.com/FasterXML/jackson-module-kotlin/issues/378 .\r\n\r\nSetter-based deserialization does not generate an error if the `id-property` is not present on the `JSON`.\r\nOn the other hand, instantiator-based deserialization throws a `MismatchedInputException` if the `id-property` is not present in the `JSON`.\r\n\r\n**Version information**\r\nIt has been present since at least 2.9.9 and is reproduced in 2.15.0-rc1.\r\n\r\n**To Reproduce**\r\n\r\n```java\r\nimport com.fasterxml.jackson.annotation.JsonCreator;\r\nimport com.fasterxml.jackson.annotation.JsonIdentityInfo;\r\nimport com.fasterxml.jackson.annotation.JsonProperty;\r\nimport com.fasterxml.jackson.annotation.ObjectIdGenerators;\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport org.junit.jupiter.api.Test;\r\n\r\npublic class ObjectId {\r\n    @JsonIdentityInfo(property = \"id\", generator = ObjectIdGenerators.PropertyGenerator.class)\r\n    static class SetterBased {\r\n        private String id;\r\n\r\n        public String getId() {\r\n            return id;\r\n        }\r\n\r\n        public void setId(String id) {\r\n            this.id = id;\r\n        }\r\n    }\r\n\r\n    @JsonIdentityInfo(property = \"id\", generator = ObjectIdGenerators.PropertyGenerator.class)\r\n    static class CreatorBased {\r\n        private final String id;\r\n\r\n        @JsonCreator\r\n        CreatorBased(@JsonProperty(value = \"id\") String id) {\r\n            this.id = id;\r\n        }\r\n\r\n        public String getId() {\r\n            return id;\r\n        }\r\n    }\r\n\r\n    @Test\r\n    void test() throws JsonProcessingException {\r\n        ObjectMapper mapper = new ObjectMapper();\r\n\r\n        // -> no error\r\n        SetterBased t1 = mapper.readValue(\"{}\", SetterBased.class);\r\n        System.out.println(t1.id); // -> null\r\n\r\n        // -> MismatchedInputException thrown\r\n        CreatorBased t2 = mapper.readValue(\"{}\", CreatorBased.class);\r\n    }\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nIt would be correct to be one of the following summarized below.\r\nhttps://github.com/FasterXML/jackson-module-kotlin/issues/378#issuecomment-1477141827\r\n\r\n**Additional context**\r\nn/a"
}